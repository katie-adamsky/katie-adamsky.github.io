{"ast":null,"code":"/*\nBreath of the Compassionate is the name of an ancient Islamic geometric tesselation\nYou can look at it as a series of diagonal squares, where one half of them are \nexpanding outwards while the other half contract.\nIt is a study in balance, give and take.\nI also added generative elements to keep it interesting: you can press any key to \nrandomly change the color gradient, and different stars are skipped each time\nto encourage you to explore the space\n*/\n\nlet skipped_cells = [];\nfunction setup(p5) {\n  p5.createCanvas(1000, 600);\n}\nlet base_size = 100,\n  size_change = 0,\n  inhaling = true,\n  paused = false;\nlet lerp_color1,\n  lerp_color2,\n  color1 = 0,\n  color2 = 1,\n  color3 = 2,\n  color4 = 3;\nfunction draw(p5) {\n  p5.background(\"white\");\n  p5.noStroke();\n  let elements = {\n    water: p5.color(212, 44, 100),\n    fire: p5.color(4, 68, 100),\n    earth: p5.color(130, 65, 68),\n    air: p5.color(304, 8, 100)\n  };\n  if (!paused) {\n    if (size_change >= 65 || size_change <= -42) {\n      inhaling = !inhaling;\n    }\n    let gradient_position = p5.map(Math.abs(size_change), 0, 65, 0, 1);\n    if (inhaling) {\n      size_change += 2;\n    } else {\n      size_change -= 2;\n    }\n    lerp_color1 = p5.lerpColor(Object.entries(elements)[color1][1], Object.entries(elements)[color2][1], gradient_position);\n    lerp_color2 = p5.lerpColor(Object.entries(elements)[color3][1], Object.entries(elements)[color4][1], gradient_position);\n  }\n  tesselation(p5, base_size / 2, base_size / 2, base_size + size_change);\n}\nfunction mousePressed() {\n  paused = !paused;\n}\nfunction keyPressed() {\n  color1 = Math.floor(Math.random() * 4);\n  color2 = Math.floor(Math.random() * 4);\n  color3 = Math.floor(Math.random() * 4);\n  color4 = Math.floor(Math.random() * 4);\n  while (color1 === color2) {\n    color1 = Math.floor(Math.random() * 4);\n    color2 = Math.floor(Math.random() * 4);\n  }\n}\nfunction tesselation(p5, x, y, size) {\n  let centerX = x,\n    centerY = y;\n  for (let i = 0; i < 10; i++) {\n    for (let j = 0; j < 10; j++) {\n      let skip = 0;\n      let index = skipped_cells.findIndex(coordinates => JSON.stringify(coordinates[0]) === JSON.stringify([i, j]));\n      if (index !== -1) {\n        skip = skipped_cells[index][1];\n      }\n      if (skip !== 1) {\n        p5.fill(lerp_color1);\n        star(p5, centerX, centerY, size / 2);\n      }\n      if (skip !== 2) {\n        p5.fill(\"black\");\n        star(p5, centerX, centerY, size / 2.65);\n      }\n      if (skip !== 3) {\n        p5.fill(lerp_color1);\n        star(p5, centerX, centerY, size / 4);\n      }\n      if (skip !== 4) {\n        p5.fill(\"black\");\n        star(p5, centerX, centerY, size / 8);\n      }\n      if (j == 9 || i == 9) {\n        break;\n      }\n      if (skip !== 5) {\n        p5.fill(lerp_color2);\n        inverted_star(p5, centerX + base_size / 2, centerY + base_size / 2, (base_size - size_change) / 5);\n      }\n      if (skip !== 6) {\n        p5.fill(\"black\");\n        inverted_star(p5, centerX + base_size / 2, centerY + base_size / 2, (base_size - size_change) / 10);\n      }\n      if (skip !== 7) {\n        p5.fill(lerp_color2);\n        inverted_star(p5, centerX + base_size / 2, centerY + base_size / 2, (base_size - size_change) / 20);\n      }\n      centerX += base_size;\n    }\n    centerX = x;\n    centerY += base_size;\n  }\n}\nfunction star(p5, centerX, centerY, size) {\n  let angle = p5.TWO_PI / 16;\n  p5.beginShape();\n  let x, y;\n  for (let i = 0; i < 16; i++) {\n    if (i % 4 === 0) {\n      x = centerX + base_size / 2 * Math.cos(i * angle);\n      y = centerY + base_size / 2 * Math.sin(i * angle);\n    } else if (i % 2 === 0) {\n      x = centerX + (size + size_change > base_size / 2 ? base_size / 2 : size + size_change) * Math.cos(i * angle);\n      y = centerY + (size + size_change > base_size / 2 ? base_size / 2 : size + size_change) * Math.sin(i * angle);\n    } else {\n      x = centerX + 0.765 * size * Math.cos(i * angle);\n      y = centerY + 0.765 * size * Math.sin(i * angle);\n    }\n    p5.vertex(x, y);\n  }\n  p5.endShape(p5.CLOSE);\n}\nfunction inverted_star(p5, centerX, centerY, size) {\n  let angle = p5.TWO_PI / 16;\n  p5.beginShape();\n  let x, y;\n  for (let i = 0; i < 16; i++) {\n    if (i % 4 === 0) {\n      x = centerX + base_size / 2 * Math.cos(i * angle);\n      y = centerY + base_size / 2 * Math.sin(i * angle);\n    } else if (i % 2 === 0) {\n      let magnitude = size - size_change > base_size / 2 ? base_size / 2 : size - size_change;\n      if (magnitude < -30) {\n        magnitude = -30;\n      }\n      x = centerX + magnitude * Math.cos(i * angle);\n      y = centerY + magnitude * Math.sin(i * angle);\n    } else {\n      x = centerX + 0.765 * size * Math.cos(i * angle);\n      y = centerY + 0.765 * size * Math.sin(i * angle);\n    }\n    p5.vertex(x, y);\n  }\n  p5.endShape(p5.CLOSE);\n}\nexport { draw, setup, mousePressed, keyPressed };","map":{"version":3,"names":["skipped_cells","setup","p5","createCanvas","base_size","size_change","inhaling","paused","lerp_color1","lerp_color2","color1","color2","color3","color4","draw","background","noStroke","elements","water","color","fire","earth","air","gradient_position","map","Math","abs","lerpColor","Object","entries","tesselation","mousePressed","keyPressed","floor","random","x","y","size","centerX","centerY","i","j","skip","index","findIndex","coordinates","JSON","stringify","fill","star","inverted_star","angle","TWO_PI","beginShape","cos","sin","vertex","endShape","CLOSE","magnitude"],"sources":["/Users/katieadamsky/katie-adamsky.github.io/site/src/pages/projects/breath/sketch.js"],"sourcesContent":["/*\nBreath of the Compassionate is the name of an ancient Islamic geometric tesselation\nYou can look at it as a series of diagonal squares, where one half of them are \nexpanding outwards while the other half contract.\nIt is a study in balance, give and take.\nI also added generative elements to keep it interesting: you can press any key to \nrandomly change the color gradient, and different stars are skipped each time\nto encourage you to explore the space\n*/\n\nlet skipped_cells = [];\nfunction setup(p5) {\n    p5.createCanvas(1000, 600);\n}\n\nlet base_size = 100, size_change = 0, inhaling = true, paused = false;\nlet lerp_color1, lerp_color2, color1 = 0, color2 = 1, color3 = 2, color4 = 3;\n\nfunction draw(p5) {\n  p5.background(\"white\"); \n  p5.noStroke();\n  let elements = {\n    water: p5.color(212, 44, 100), \n    fire: p5.color(4, 68, 100), \n    earth: p5.color(130, 65, 68), \n    air: p5.color(304, 8, 100),\n  }\n  \n  if (!paused) {\n    if (size_change >= 65 || size_change <= -42) {\n      inhaling = !inhaling;\n    }\n    let gradient_position = p5.map(Math.abs(size_change), 0, 65, 0, 1);\n    if (inhaling) {\n      size_change += 2;\n    } else {\n      size_change -= 2;\n    }\n    lerp_color1 = p5.lerpColor(Object.entries(elements)[color1][1], Object.entries(elements)[color2][1], gradient_position);\n    lerp_color2 = p5.lerpColor(Object.entries(elements)[color3][1], Object.entries(elements)[color4][1], gradient_position);\n  }\n  tesselation(p5, base_size/2, base_size/2, base_size + size_change);\n}\n\nfunction mousePressed() {\n  paused = !paused;\n}\n\nfunction keyPressed() {\n  color1 = Math.floor(Math.random()*4);\n  color2 = Math.floor(Math.random()*4);\n  color3 = Math.floor(Math.random()*4);\n  color4 = Math.floor(Math.random()*4);\n  while(color1===color2){\n    color1 = Math.floor(Math.random()*4);\n    color2 = Math.floor(Math.random()*4);\n  }\n}\n\nfunction tesselation(p5, x, y, size) {\n  let centerX = x, centerY = y;\n  for(let i=0; i < 10; i++) {\n    for(let j=0; j < 10; j++) {\n        let skip = 0;\n        let index = skipped_cells.findIndex(coordinates => JSON.stringify(coordinates[0]) === JSON.stringify([i,j]));\n        if (index !== -1){\n          skip = skipped_cells[index][1];\n        }\n        if (skip !== 1) {\n          p5.fill(lerp_color1);\n          star(p5, centerX, centerY, size/2);\n        }\n        if (skip !== 2) {\n          p5.fill(\"black\");\n          star(p5, centerX, centerY, size/2.65);\n        } \n        if (skip !== 3) {\n          p5.fill(lerp_color1);\n          star(p5, centerX, centerY, size/4);\n        }\n        if (skip !== 4) {\n          p5.fill(\"black\");\n          star(p5, centerX, centerY, size/8);\n        }\n        if(j==9 || i==9){\n            break;\n        }\n        if (skip !== 5) {\n          p5.fill(lerp_color2);\n          inverted_star(p5, centerX+base_size/2, centerY+base_size/2, (base_size-size_change)/5);\n        }\n        if (skip !== 6) {\n          p5.fill(\"black\");\n          inverted_star(p5, centerX+base_size/2, centerY+base_size/2, (base_size-size_change)/10);\n        }\n        if (skip !== 7) {\n          p5.fill(lerp_color2);\n          inverted_star(p5, centerX+base_size/2, centerY+base_size/2, (base_size-size_change)/20);\n        }\n        centerX += base_size;\n    }\n    centerX = x;\n    centerY += base_size;\n  }\n\n}\n\n\n\nfunction star(p5, centerX, centerY, size) {\n  let angle = p5.TWO_PI / 16; \n  p5.beginShape();\n  let x, y;\n  for (let i = 0; i < 16; i++) {\n    if (i%4 === 0) {\n      x = centerX + (base_size/2) * Math.cos(i * angle);\n      y = centerY + (base_size/2) * Math.sin(i * angle);\n    } else if (i%2 === 0) {\n      x = centerX + (size+size_change > (base_size /2) ? (base_size/2) : (size+size_change)) * Math.cos(i * angle);\n      y = centerY + (size+size_change > (base_size/2) ? (base_size/2) : (size+size_change)) * Math.sin(i * angle);\n    } else {\n      x = centerX + 0.765 * (size) * Math.cos(i * angle);\n      y = centerY + 0.765 * size * Math.sin(i * angle);\n    }\n    p5.vertex(x, y);\n  }\n  p5.endShape(p5.CLOSE);\n}\n\nfunction inverted_star(p5, centerX, centerY, size) {\n  let angle = p5.TWO_PI / 16; \n  p5.beginShape();\n  let x, y;\n  for (let i = 0; i < 16; i++) {\n    if (i%4 === 0) {\n      x = centerX + (base_size/2) * Math.cos(i * angle);\n      y = centerY + (base_size/2) * Math.sin(i * angle);\n    } else if (i%2 === 0) {\n      let magnitude = (size-size_change > (base_size /2) ? (base_size/2) : (size-size_change));\n      if (magnitude < -30) {\n        magnitude = -30;\n      }\n      x = centerX + magnitude * Math.cos(i * angle);\n      y = centerY + magnitude * Math.sin(i * angle);\n    } else {\n      x = centerX + 0.765 * (size) * Math.cos(i * angle);\n      y = centerY + 0.765 * size * Math.sin(i * angle);\n    }\n    p5.vertex(x, y);\n  }\n  p5.endShape(p5.CLOSE);\n}\n\n\nexport {draw, setup, mousePressed, keyPressed} \n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}