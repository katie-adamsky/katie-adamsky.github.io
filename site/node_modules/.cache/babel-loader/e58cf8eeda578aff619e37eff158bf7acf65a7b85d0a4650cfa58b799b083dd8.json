{"ast":null,"code":"var _jsxFileName = \"/Users/katieadamsky/katie-adamsky.github.io/site/src/pages/projects/faces/Faces.js\",\n  _s = $RefreshSig$();\nimport { ReactP5Wrapper } from \"@p5-wrapper/react\";\nimport { setup, draw, keyPressed } from './sketch';\nimport Project from '.././Project';\nimport useWindowDimensions from \"../../../layout/useWindowDimensions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction handleResize(p5, props) {\n  return () => {\n    let {\n      width\n    } = props;\n    if (width > 1000) {\n      width = 1000;\n    }\n    p5.resizeCanvas(width, 400);\n  };\n}\nfunction sketch(p5) {\n  let state = {\n    width: 1000\n  };\n  p5.updateWithProps = props => {\n    state = Object.assign(state, props);\n  };\n  p5.setup = () => {\n    setup(p5, 1000);\n  };\n  p5.draw = () => {\n    draw(p5);\n  };\n  p5.keyPressed = () => {\n    keyPressed();\n  };\n  p5.windowResized = handleResize(p5, state);\n}\nfunction FacesP5() {\n  _s();\n  const {\n    width\n  } = useWindowDimensions();\n  return /*#__PURE__*/_jsxDEV(ReactP5Wrapper, {\n    sketch: sketch,\n    width: width\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 10\n  }, this);\n}\n_s(FacesP5, \"dAXfqqb4RvvCmElffEkkL8escOs=\", false, function () {\n  return [useWindowDimensions];\n});\n_c = FacesP5;\nconst Faces = new Project('Faces', 'Randomly generated faces', /*#__PURE__*/_jsxDEV(\"p\", {\n  children: \"This was a great learning exercise in p5.js. I learned how to draw basic shapes and apply Perlin noise to them to give them a hand-drawn feel. Press any key for a fun surprise!\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 45,\n  columnNumber: 3\n}, this), /*#__PURE__*/_jsxDEV(FacesP5, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 49,\n  columnNumber: 3\n}, this), \"https://github.com/katie-adamsky/katie-adamsky.github.io/blob/main/site/src/pages/projects/faces/sketch.js\");\nexport default Faces;\nvar _c;\n$RefreshReg$(_c, \"FacesP5\");","map":{"version":3,"names":["ReactP5Wrapper","setup","draw","keyPressed","Project","useWindowDimensions","jsxDEV","_jsxDEV","handleResize","p5","props","width","resizeCanvas","sketch","state","updateWithProps","Object","assign","windowResized","FacesP5","_s","fileName","_jsxFileName","lineNumber","columnNumber","_c","Faces","children","$RefreshReg$"],"sources":["/Users/katieadamsky/katie-adamsky.github.io/site/src/pages/projects/faces/Faces.js"],"sourcesContent":["import { ReactP5Wrapper } from \"@p5-wrapper/react\";\nimport {setup, draw, keyPressed} from './sketch';\nimport Project from '.././Project';\nimport useWindowDimensions from \"../../../layout/useWindowDimensions\";\n\nfunction handleResize(p5, props) {\n  return () => {\n    let {width} = props;\n    if (width > 1000) {\n      width = 1000;\n    }\n    p5.resizeCanvas(width, 400);\n  }\n}\n\nfunction sketch(p5) {\n  let state = {\n    width: 1000\n  }\n\n  p5.updateWithProps = props => {\n    state = Object.assign(state, props)\n  };\n\n  p5.setup = () => {\n    setup(p5, 1000);\n  }\n  p5.draw = () => {\n    draw(p5);\n  }\n  p5.keyPressed = () => {\n    keyPressed();\n  }\n  p5.windowResized = handleResize(p5, state);\n}\n\nfunction FacesP5() {\n  const {width} = useWindowDimensions();\n  return <ReactP5Wrapper sketch={sketch} width={width}/>;\n}\n\nconst Faces = new Project(\n  'Faces', \n  'Randomly generated faces', \n  <p>\n    This was a great learning exercise in p5.js. I learned how to draw basic shapes and apply Perlin noise to them to give \n    them a hand-drawn feel. Press any key for a fun surprise!\n  </p>, \n  <FacesP5 />,\n  \"https://github.com/katie-adamsky/katie-adamsky.github.io/blob/main/site/src/pages/projects/faces/sketch.js\"\n);\n\nexport default Faces;"],"mappings":";;AAAA,SAASA,cAAc,QAAQ,mBAAmB;AAClD,SAAQC,KAAK,EAAEC,IAAI,EAAEC,UAAU,QAAO,UAAU;AAChD,OAAOC,OAAO,MAAM,cAAc;AAClC,OAAOC,mBAAmB,MAAM,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,SAASC,YAAYA,CAACC,EAAE,EAAEC,KAAK,EAAE;EAC/B,OAAO,MAAM;IACX,IAAI;MAACC;IAAK,CAAC,GAAGD,KAAK;IACnB,IAAIC,KAAK,GAAG,IAAI,EAAE;MAChBA,KAAK,GAAG,IAAI;IACd;IACAF,EAAE,CAACG,YAAY,CAACD,KAAK,EAAE,GAAG,CAAC;EAC7B,CAAC;AACH;AAEA,SAASE,MAAMA,CAACJ,EAAE,EAAE;EAClB,IAAIK,KAAK,GAAG;IACVH,KAAK,EAAE;EACT,CAAC;EAEDF,EAAE,CAACM,eAAe,GAAGL,KAAK,IAAI;IAC5BI,KAAK,GAAGE,MAAM,CAACC,MAAM,CAACH,KAAK,EAAEJ,KAAK,CAAC;EACrC,CAAC;EAEDD,EAAE,CAACR,KAAK,GAAG,MAAM;IACfA,KAAK,CAACQ,EAAE,EAAE,IAAI,CAAC;EACjB,CAAC;EACDA,EAAE,CAACP,IAAI,GAAG,MAAM;IACdA,IAAI,CAACO,EAAE,CAAC;EACV,CAAC;EACDA,EAAE,CAACN,UAAU,GAAG,MAAM;IACpBA,UAAU,CAAC,CAAC;EACd,CAAC;EACDM,EAAE,CAACS,aAAa,GAAGV,YAAY,CAACC,EAAE,EAAEK,KAAK,CAAC;AAC5C;AAEA,SAASK,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM;IAACT;EAAK,CAAC,GAAGN,mBAAmB,CAAC,CAAC;EACrC,oBAAOE,OAAA,CAACP,cAAc;IAACa,MAAM,EAAEA,MAAO;IAACF,KAAK,EAAEA;EAAM;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AACxD;AAACJ,EAAA,CAHQD,OAAO;EAAA,QACEd,mBAAmB;AAAA;AAAAoB,EAAA,GAD5BN,OAAO;AAKhB,MAAMO,KAAK,GAAG,IAAItB,OAAO,CACvB,OAAO,EACP,0BAA0B,eAC1BG,OAAA;EAAAoB,QAAA,EAAG;AAGH;EAAAN,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAG,CAAC,eACJjB,OAAA,CAACY,OAAO;EAAAE,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,EACX,4GACF,CAAC;AAED,eAAeE,KAAK;AAAC,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}