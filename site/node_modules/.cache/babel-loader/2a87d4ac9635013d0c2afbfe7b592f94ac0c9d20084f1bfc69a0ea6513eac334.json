{"ast":null,"code":"var _jsxFileName = \"/Users/katieadamsky/katie-adamsky.github.io/site/src/pages/projects/Breath.js\";\nimport { ReactP5Wrapper } from \"@p5-wrapper/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet base_size = 150,\n  size_change = 0,\n  inhaling = true,\n  paused = false;\nlet lerp_color1,\n  lerp_color2,\n  color1 = 0,\n  color2 = 1,\n  color3 = 2,\n  color4 = 3;\nfunction sketch(p5) {\n  p5.setup = () => p5.createCanvas(600, 400, p5.WEBGL);\n  p5.draw = () => {\n    p5.background(\"black\");\n    p5.noStroke();\n    let elements = {\n      water: p5.color(212, 44, 100),\n      fire: p5.color(4, 68, 100),\n      earth: p5.color(130, 65, 68),\n      air: p5.color(304, 8, 100)\n    };\n    if (!paused) {\n      if (size_change >= 65 || size_change <= -42) {\n        inhaling = !inhaling;\n      }\n      let gradient_position = p5.map(p5.abs(size_change), 0, 65, 0, 1);\n      if (inhaling) {\n        size_change += 2;\n      } else {\n        size_change -= 2;\n      }\n      lerp_color1 = p5.lerpColor(Object.entries(elements)[color1][1], Object.entries(elements)[color2][1], gradient_position);\n      lerp_color2 = p5.lerpColor(Object.entries(elements)[color3][1], Object.entries(elements)[color4][1], gradient_position);\n    }\n    tesselation(p5, base_size / 2, base_size / 2, base_size + size_change);\n  };\n}\nfunction tesselation(p5, x, y, size) {\n  let centerX = x,\n    centerY = y;\n  for (let i = 0; i < 20; i++) {\n    for (let j = 0; j < 20; j++) {\n      let skip = 0;\n      //index = skipped_cells.findIndex(coordinates => JSON.stringify(coordinates[0]) === JSON.stringify([i,j]));\n      // if (index !== -1){\n      //   skip = skipped_cells[index][1];\n      // }\n      if (skip !== 1) {\n        p5.fill(lerp_color1);\n        star(centerX, centerY, size / 2);\n      }\n      if (skip !== 2) {\n        p5.fill(\"black\");\n        star(centerX, centerY, size / 2.65);\n      }\n      if (skip !== 3) {\n        fill(lerp_color1);\n        star(centerX, centerY, size / 4);\n      }\n      if (skip !== 4) {\n        fill(\"black\");\n        star(centerX, centerY, size / 8);\n      }\n      if (skip !== 5) {\n        fill(lerp_color2);\n        inverted_star(centerX + base_size / 2, centerY + base_size / 2, (base_size - size_change) / 5);\n      }\n      if (skip !== 6) {\n        fill(\"black\");\n        inverted_star(centerX + base_size / 2, centerY + base_size / 2, (base_size - size_change) / 10);\n      }\n      if (skip !== 7) {\n        fill(lerp_color2);\n        inverted_star(centerX + base_size / 2, centerY + base_size / 2, (base_size - size_change) / 20);\n      }\n      centerX += base_size;\n    }\n    centerX = x;\n    centerY += base_size;\n  }\n}\nfunction star(centerX, centerY, size) {\n  let angle = Math.TWO_PI / 16;\n  p5.beginShape();\n  let x, y;\n  for (let i = 0; i < 16; i++) {\n    if (i % 4 == 0) {\n      x = centerX + base_size / 2 * Math.cos(i * angle);\n      y = centerY + base_size / 2 * Math.sin(i * angle);\n    } else if (i % 2 == 0) {\n      x = centerX + (size + size_change > base_size / 2 ? base_size / 2 : size + size_change) * Math.cos(i * angle);\n      y = centerY + (size + size_change > base_size / 2 ? base_size / 2 : size + size_change) * Math.sin(i * angle);\n    } else {\n      x = centerX + 0.765 * size * Math.cos(i * angle);\n      y = centerY + 0.765 * size * Math.sin(i * angle);\n    }\n    p5.vertex(x, y);\n  }\n  p5.endShape(p5.CLOSE);\n}\nfunction inverted_star(centerX, centerY, size) {\n  let angle = Math.TWO_PI / 16;\n  p5.beginShape();\n  let x, y;\n  for (let i = 0; i < 16; i++) {\n    if (i % 4 == 0) {\n      x = centerX + base_size / 2 * Math.cos(i * angle);\n      y = centerY + base_size / 2 * Math.sin(i * angle);\n    } else if (i % 2 == 0) {\n      let magnitude = size - size_change > base_size / 2 ? base_size / 2 : size - size_change;\n      if (magnitude < -30) {\n        magnitude = -30;\n      }\n      x = centerX + magnitude * Math.cos(i * angle);\n      y = centerY + magnitude * Math.sin(i * angle);\n    } else {\n      x = centerX + 0.765 * size * Math.cos(i * angle);\n      y = centerY + 0.765 * size * Math.sin(i * angle);\n    }\n    p5.vertex(x, y);\n  }\n  p5.endShape(p5.CLOSE);\n}\nexport default function Breath() {\n  return /*#__PURE__*/_jsxDEV(ReactP5Wrapper, {\n    sketch: sketch\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 10\n  }, this);\n}\n_c = Breath;\nvar _c;\n$RefreshReg$(_c, \"Breath\");","map":{"version":3,"names":["ReactP5Wrapper","jsxDEV","_jsxDEV","base_size","size_change","inhaling","paused","lerp_color1","lerp_color2","color1","color2","color3","color4","sketch","p5","setup","createCanvas","WEBGL","draw","background","noStroke","elements","water","color","fire","earth","air","gradient_position","map","abs","lerpColor","Object","entries","tesselation","x","y","size","centerX","centerY","i","j","skip","fill","star","inverted_star","angle","Math","TWO_PI","beginShape","cos","sin","vertex","endShape","CLOSE","magnitude","Breath","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/katieadamsky/katie-adamsky.github.io/site/src/pages/projects/Breath.js"],"sourcesContent":["import { ReactP5Wrapper } from \"@p5-wrapper/react\";\n\nlet base_size = 150, size_change = 0, inhaling = true, paused = false;\nlet lerp_color1, lerp_color2, color1 = 0, color2 = 1, color3 = 2, color4 = 3;\n\nfunction sketch(p5) {\n  p5.setup = () => p5.createCanvas(600, 400, p5.WEBGL);\n\n  p5.draw = () => {\n    p5.background(\"black\"); \n    p5.noStroke();\n    let elements = {\n      water: p5.color(212, 44, 100), \n      fire: p5.color(4, 68, 100), \n      earth: p5.color(130, 65, 68), \n      air: p5.color(304, 8, 100),\n    }\n    if (!paused) {\n      if (size_change >= 65 || size_change <= -42) {\n        inhaling = !inhaling;\n      }\n      let gradient_position = p5.map(p5.abs(size_change), 0, 65, 0, 1);\n      if (inhaling) {\n        size_change += 2;\n      } else {\n        size_change -= 2;\n      }\n      lerp_color1 = p5.lerpColor(Object.entries(elements)[color1][1], Object.entries(elements)[color2][1], gradient_position);\n      lerp_color2 = p5.lerpColor(Object.entries(elements)[color3][1], Object.entries(elements)[color4][1], gradient_position);\n    }\n    tesselation(p5, base_size/2, base_size/2, base_size + size_change);\n  };\n}\n\nfunction tesselation(p5, x, y, size) {\n  let centerX = x, centerY = y;\n  for(let i=0; i < 20; i++) {\n    for(let j=0; j < 20; j++) {\n      let skip = 0;\n      //index = skipped_cells.findIndex(coordinates => JSON.stringify(coordinates[0]) === JSON.stringify([i,j]));\n      // if (index !== -1){\n      //   skip = skipped_cells[index][1];\n      // }\n      if (skip !== 1) {\n        p5.fill(lerp_color1);\n        star(centerX, centerY, size/2);\n      }\n      if (skip !== 2) {\n        p5.fill(\"black\");\n        star(centerX, centerY, size/2.65);\n      } \n      if (skip !== 3) {\n        fill(lerp_color1);\n        star(centerX, centerY, size/4);\n      }\n      if (skip !== 4) {\n        fill(\"black\");\n        star(centerX, centerY, size/8);\n      }\n      if (skip !== 5) {\n        fill(lerp_color2);\n        inverted_star(centerX+base_size/2, centerY+base_size/2, (base_size-size_change)/5);\n      }\n      if (skip !== 6) {\n        fill(\"black\");\n        inverted_star(centerX+base_size/2, centerY+base_size/2, (base_size-size_change)/10);\n      }\n      if (skip !== 7) {\n        fill(lerp_color2);\n        inverted_star(centerX+base_size/2, centerY+base_size/2, (base_size-size_change)/20);\n      }\n      centerX += base_size;\n    }\n    centerX = x;\n    centerY += base_size;\n  }\n\n}\n\n\nfunction star(centerX, centerY, size) {\n  let angle = Math.TWO_PI / 16; \n  p5.beginShape();\n  let x, y;\n  for (let i = 0; i < 16; i++) {\n    if (i%4 == 0) {\n      x = centerX + (base_size/2) * Math.cos(i * angle);\n      y = centerY + (base_size/2) * Math.sin(i * angle);\n    } else if (i%2 == 0) {\n      x = centerX + (size+size_change > (base_size /2) ? (base_size/2) : (size+size_change)) * Math.cos(i * angle);\n      y = centerY + (size+size_change > (base_size/2) ? (base_size/2) : (size+size_change)) * Math.sin(i * angle);\n    } else {\n      x = centerX + 0.765 * (size) * Math.cos(i * angle);\n      y = centerY + 0.765 * size * Math.sin(i * angle);\n    }\n    p5.vertex(x, y);\n  }\n  p5.endShape(p5.CLOSE);\n}\n\nfunction inverted_star(centerX, centerY, size) {\n  let angle = Math.TWO_PI / 16; \n  p5.beginShape();\n  let x, y;\n  for (let i = 0; i < 16; i++) {\n    if (i%4 == 0) {\n      x = centerX + (base_size/2) * Math.cos(i * angle);\n      y = centerY + (base_size/2) * Math.sin(i * angle);\n    } else if (i%2 == 0) {\n      let magnitude = (size-size_change > (base_size /2) ? (base_size/2) : (size-size_change));\n      if (magnitude < -30) {\n        magnitude = -30;\n      }\n      x = centerX + magnitude * Math.cos(i * angle);\n      y = centerY + magnitude * Math.sin(i * angle);\n    } else {\n      x = centerX + 0.765 * (size) * Math.cos(i * angle);\n      y = centerY + 0.765 * size * Math.sin(i * angle);\n    }\n    p5.vertex(x, y);\n  }\n  p5.endShape(p5.CLOSE);\n}\n\n\nexport default function Breath() {\n  return <ReactP5Wrapper sketch={sketch} />;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}