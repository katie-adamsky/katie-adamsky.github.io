{"ast":null,"code":"var _jsxFileName = \"/Users/katieadamsky/katie-adamsky.github.io/site/src/pages/projects/Breath.js\";\nimport { ReactP5Wrapper } from \"@p5-wrapper/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet skipped_cells = [];\nfunction setup() {\n  createCanvas(600, 400, p5.WEBGL);\n  // drawingContext.shadowOffsetX = 5;\n  // drawingContext.shadowOffsetY = -5;\n  // drawingContext.shadowBlur = 10;\n  // drawingContext.shadowColor = \"black\";\n  colorMode(HSB);\n\n  //randomly delete some of the stars \n  for (let i = 0; i < 75; i++) {\n    skipped_cells[i] = [[floor(Math.random() * 20), floor(Math.random() * 20)], floor(Math.random() * 7 + 1)];\n  }\n}\nfunction sketch(p5) {\n  p5.setup = () => p5.createCanvas(600, 400, p5.WEBGL);\n  p5.draw = () => {\n    p5.background(250);\n    p5.normalMaterial();\n    p5.push();\n    p5.rotateZ(p5.frameCount * 0.01);\n    p5.rotateX(p5.frameCount * 0.01);\n    p5.rotateY(p5.frameCount * 0.01);\n    p5.plane(100);\n    p5.pop();\n  };\n}\nexport default function Breath() {\n  return /*#__PURE__*/_jsxDEV(ReactP5Wrapper, {\n    sketch: sketch\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n}\n_c = Breath;\nvar _c;\n$RefreshReg$(_c, \"Breath\");","map":{"version":3,"names":["ReactP5Wrapper","jsxDEV","_jsxDEV","skipped_cells","setup","createCanvas","p5","WEBGL","colorMode","HSB","i","floor","Math","random","sketch","draw","background","normalMaterial","push","rotateZ","frameCount","rotateX","rotateY","plane","pop","Breath","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/katieadamsky/katie-adamsky.github.io/site/src/pages/projects/Breath.js"],"sourcesContent":["import { ReactP5Wrapper } from \"@p5-wrapper/react\";\n\nlet skipped_cells = [];\nfunction setup() {\n\n  createCanvas(600,400, p5.WEBGL);\n  // drawingContext.shadowOffsetX = 5;\n  // drawingContext.shadowOffsetY = -5;\n  // drawingContext.shadowBlur = 10;\n  // drawingContext.shadowColor = \"black\";\n  colorMode(HSB); \n\n  //randomly delete some of the stars \n  for(let i=0; i<75; i++) {\n    skipped_cells[i] = [[floor(Math.random()*20), floor(Math.random()*20)], floor(Math.random()*7+1)];\n  }\n}\n\nfunction sketch(p5) {\n  p5.setup = () => p5.createCanvas(600, 400, p5.WEBGL);\n\n  p5.draw = () => {\n    p5.background(250);\n    p5.normalMaterial();\n    p5.push();\n    p5.rotateZ(p5.frameCount * 0.01);\n    p5.rotateX(p5.frameCount * 0.01);\n    p5.rotateY(p5.frameCount * 0.01);\n    p5.plane(100);\n    p5.pop();\n  };\n}\n\nexport default function Breath() {\n  return <ReactP5Wrapper sketch={sketch} />;\n}"],"mappings":";AAAA,SAASA,cAAc,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,IAAIC,aAAa,GAAG,EAAE;AACtB,SAASC,KAAKA,CAAA,EAAG;EAEfC,YAAY,CAAC,GAAG,EAAC,GAAG,EAAEC,EAAE,CAACC,KAAK,CAAC;EAC/B;EACA;EACA;EACA;EACAC,SAAS,CAACC,GAAG,CAAC;;EAEd;EACA,KAAI,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAC,EAAE,EAAEA,CAAC,EAAE,EAAE;IACtBP,aAAa,CAACO,CAAC,CAAC,GAAG,CAAC,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAC,EAAE,CAAC,EAAEF,KAAK,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAC,EAAE,CAAC,CAAC,EAAEF,KAAK,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,CAAC;EACnG;AACF;AAEA,SAASC,MAAMA,CAACR,EAAE,EAAE;EAClBA,EAAE,CAACF,KAAK,GAAG,MAAME,EAAE,CAACD,YAAY,CAAC,GAAG,EAAE,GAAG,EAAEC,EAAE,CAACC,KAAK,CAAC;EAEpDD,EAAE,CAACS,IAAI,GAAG,MAAM;IACdT,EAAE,CAACU,UAAU,CAAC,GAAG,CAAC;IAClBV,EAAE,CAACW,cAAc,CAAC,CAAC;IACnBX,EAAE,CAACY,IAAI,CAAC,CAAC;IACTZ,EAAE,CAACa,OAAO,CAACb,EAAE,CAACc,UAAU,GAAG,IAAI,CAAC;IAChCd,EAAE,CAACe,OAAO,CAACf,EAAE,CAACc,UAAU,GAAG,IAAI,CAAC;IAChCd,EAAE,CAACgB,OAAO,CAAChB,EAAE,CAACc,UAAU,GAAG,IAAI,CAAC;IAChCd,EAAE,CAACiB,KAAK,CAAC,GAAG,CAAC;IACbjB,EAAE,CAACkB,GAAG,CAAC,CAAC;EACV,CAAC;AACH;AAEA,eAAe,SAASC,MAAMA,CAAA,EAAG;EAC/B,oBAAOvB,OAAA,CAACF,cAAc;IAACc,MAAM,EAAEA;EAAO;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACC,EAAA,GAFuBL,MAAM;AAAA,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}